{
  "useState": {
    "prefix": "us",
    "body": ["const [$1,set$1] = useState<$3>($2)"],
    "description": "FYC_useState"
  },
  "useEffect": {
    "prefix": "ue",
    "body": ["useEffect(() => { $1 }, [])"],
    "description": "FYC_useEffect"
  },
  "useCallback": {
    "prefix": "uc",
    "body": ["const $1 = useCallback(() => {$2}, [])"],
    "description": "FYC_useCallback"
  },
  "TS-Props": {
    "prefix": "ip",
    "body": ["type IProps = {$1}"],
    "description": "FYC_IProps"
  },
  "TS-IState": {
    "prefix": "is",
    "body": ["interface IState{$}"],
    "description": "FYC_IState"
  },
  "doc": {
    "prefix": "doc",
    "body": ["const {$2} = $1"],
    "description": "FYC_对象结构-常量"
  },
  "dol": {
    "prefix": "dol",
    "body": ["let {$2} = $1"],
    "description": "FYC_对象结构-变量"
  },
  "dal": {
    "prefix": "dal",
    "body": ["let [$2] = $1"],
    "description": "FYC_数组结构-变量"
  },
  "dac": {
    "prefix": "dac",
    "body": ["const [$2] = $1"],
    "description": "FYC_数组结构-常量"
  },
  "fd": {
    "prefix": "fd",
    "body": "(...args:any[])=>void",
    "description": "FYC_通用函数类型声明"
  },
  "gen empty fun": {
    "prefix": "gef",
    "body": ["const $1 = () => null"],
    "description": "FYC_gen empty fun"
  },
  "console": {
    "prefix": "cl",
    "body": ["console.log('===$1',$1)"],
    "description": "FYC_console"
  },
  "gen react component": {
    "prefix": "grc",
    "body": [
      "import * as React from 'react';",
      "import './$1.$2';",
      "",
      "type I$1Props = {};",
      "",
      "const $1 = (props: I$1Props) => {",
      "return <div className=''></div>;",
      "};",
      "export default React.memo($1);"
    ],
    "description": "FYC_gen react component"
  },
  "gen list": {
    "prefix": "grl",
    "body": [
      "{$1.map((item, key) => <div key={$2} className='$3'>$4</div>)}"
    ],
    "description": "FYC_gen react list"
  },
}
